name: 'PR Label Action'
description: 'Synchronize pull request labels automatically using projex CLI'
inputs:
  pr_number:
    description: 'Pull request number'
    required: true
  github_token:
    description: 'GitHub token'
    required: true
runs:
  using: 'composite'
  steps:
    - name: 'Configurar safe.directory y instalar projex globalmente'
      shell: bash
      run: |
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        npm install -g projex
    - name: 'Sugerir etiquetas para el PR'
      id: suggest-labels
      shell: bash
      run: |
        LABELS=$(projex pull-request labels suggest --format csv)
        echo "labels=$LABELS" >> $GITHUB_OUTPUT
    - name: 'Sincronizar etiquetas del Pull Request'
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github_token }}
        LABELS: ${{ steps.suggest-labels.outputs.labels }}
      run: |
        if [ -z "$LABELS" ]; then
          echo "No hay etiquetas sugeridas."
          exit 0
        fi
        # Si el resultado contiene 'not found', continuar sin error
        if [[ "$LABELS" == *not\ found* ]]; then
          echo "No se encontraron etiquetas válidas para sincronizar."
          true
        fi
        IFS=',' read -ra NEW_LABELS <<< "$LABELS"
        PR_NUMBER=${{ inputs.pr_number }}
        REPO="${GITHUB_REPOSITORY}"
        OWNER=$(echo $REPO | cut -d'/' -f1)
        REPO_NAME=$(echo $REPO | cut -d'/' -f2)
        # Obtener etiquetas actuales
        CURRENT_LABELS=$(gh pr view $PR_NUMBER --json labels -q '.labels[].name')
        # Remover etiquetas que ya no aplican
        for label in $CURRENT_LABELS; do
          skip=0
          for new in "${NEW_LABELS[@]}"; do
            if [ "$label" = "$new" ]; then skip=1; break; fi
          done
          if [ $skip -eq 0 ]; then
            gh pr edit $PR_NUMBER --remove-label "$label" || true
          fi
        done
        # Agregar etiquetas nuevas
        for new in "${NEW_LABELS[@]}"; do
          found=0
          for label in $CURRENT_LABELS; do
            if [ "$label" = "$new" ]; then found=1; break; fi
          done
          if [ $found -eq 0 ]; then
            # Intenta agregar el label, si falla por no existir, créalo con color aleatorio y vuelve a intentar
            gh pr edit $PR_NUMBER --add-label "$new" || {
              echo "Label '$new' no existe, creándolo..."
              # Generar color hexadecimal aleatorio
              COLOR=$(printf '#%06X' $((RANDOM*RANDOM%16777215)))
              gh label create "$new" --color "$COLOR" --description "Auto-created by workflow" || true
              gh pr edit $PR_NUMBER --add-label "$new" || true
            }
          fi
        done
        echo "Etiquetas sincronizadas: $LABELS"
