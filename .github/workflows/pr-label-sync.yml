
name: PR Label Sync

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: number

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    steps:
      - name: "🟢 Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: "🏷️ Sugerir etiquetas para el PR"
        id: suggest-labels
        run: |
          LABELS=$(projex pull-request labels suggest --format csv)
          echo "labels=$LABELS" >> $GITHUB_OUTPUT

      - name: "🏷️ Sincronizar etiquetas del Pull Request"
        uses: actions/github-script@v7
        with:
          script: |
            const labels = process.env.LABELS || '${{ steps.suggest-labels.outputs.labels }}';
            if (!labels) {
              core.info('No hay etiquetas sugeridas.');
              return;
            }
            const newLabels = labels.split(',').map(l => l.trim()).filter(Boolean);
            if (newLabels.length === 0) {
              core.info('No hay etiquetas sugeridas.');
              return;
            }
            // Obtener etiquetas actuales del PR
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ inputs.pr_number }},
            });
            const currentLabels = pr.labels.map(l => l.name);
            // Etiquetas a remover: las que están actualmente pero no en las nuevas
            const labelsToRemove = currentLabels.filter(l => !newLabels.includes(l));
            // Etiquetas a agregar: las que están en las nuevas pero no en las actuales
            const labelsToAdd = newLabels.filter(l => !currentLabels.includes(l));
            // Remover etiquetas que ya no aplican
            for (const label of labelsToRemove) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ inputs.pr_number }},
                name: label,
              }).catch(() => {}); // Ignorar error si la etiqueta ya no existe
            }
            // Agregar etiquetas nuevas
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: ${{ inputs.pr_number }},
                labels: labelsToAdd,
              });
            }
            core.info(`Etiquetas sincronizadas: ${newLabels.join(', ')}`);
        env:
          LABELS: ${{ steps.suggest-labels.outputs.labels }}
